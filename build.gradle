buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:0.9.19'
        classpath "com.softwhistle:database-migrations-gradle-plugin:1.0.0-SNAPSHOT"
        classpath 'org.postgresql:postgresql:9.4.1209'
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

import com.tinyrye.gradle.database.DatabaseDropTask
import com.tinyrye.gradle.database.DatabaseInitializeTask
import com.tinyrye.gradle.database.DatabaseMigrateTask

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "migrations"
apply plugin: 'io.ratpack.ratpack-groovy'
apply plugin: 'distribution'

group = 'com.softwhistle'
version = '1.0.0-SNAPSHOT'
mainClassName = 'com.softwhistle.Application'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

jar {
    baseName = 'finances'
    version = '1.0.0-SNAPSHOT'
}

install {
    repositories.mavenInstaller {
        pom.artifactId = 'finances'
    }
}

compileJava {
    if (System.getProperty("compilerWarnings") != null) {
        options.compilerArgs = ['-Xlint:unchecked']
    }
}

task copyDependencies(type: Copy) {
    into "${buildDir}/distributions/dependencies/libs"
    from configurations.compile
    from configurations.runtime
}

task copyDeploy(type: Copy) {
    into project.buildDir
    from(file('src/deploy')) {
        into 'resources/deploy'
    }
}

processResources.dependsOn copyDeploy

dependencies {
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.1.1'
    compile group: 'com.softwhistle', name: 'io-operations', version: '1.0.0-SNAPSHOT'
    compile group: 'com.softwhistle', name: 'jdbc-operations', version: '1.0.0-SNAPSHOT'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'com.typesafe', name: 'config', version: '1.3.1'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.1.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.3'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1209'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
    testCompile group: 'junit', name: 'junit', version: '4.8.2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.5'
}

migrations {
    superConfig {
        url = 'jdbc:postgresql://localhost:5432/postgres'
        username = 'professorfalken'
        password = 'joshua'
    }
    url = 'jdbc:postgresql://localhost:5432/finances'
    database = 'finances'
    driverClassName = 'org.postgresql.Driver'
    username = 'professorfalken'
    password = 'joshua'
    baseDir = new File('src/main/database/migrations')
}

task testDatabaseDrop(type: DatabaseDropTask) {
    database = 'finances_test'
    driverClassName = 'org.postgresql.Driver'
    superUrl = 'jdbc:postgresql://localhost:5432/postgres'
    superUsername = 'professorfalken'
    superPassword = 'joshua'
}

task testDatabaseInitialize(type: DatabaseInitializeTask) {
    url = 'jdbc:postgresql://localhost:5432/finances_test'
    database = 'finances_test'
    driverClassName = 'org.postgresql.Driver'
    username = 'professorfalken'
    password = 'joshua'
    superUrl = 'jdbc:postgresql://localhost:5432/postgres'
    superUsername = 'professorfalken'
    superPassword = 'joshua'
}

task testDatabaseMigrate(type: DatabaseMigrateTask) {
    url = 'jdbc:postgresql://localhost:5432/finances_test'
    driverClassName = 'org.postgresql.Driver'
    username = 'professorfalken'
    password = 'joshua'
    migrationsBaseDir = new File('src/main/database/migrations')
}

test.dependsOn testDatabaseMigrate